{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Documentos\\\\www\\\\imers\\xE3o-nodejs-react-and-eact-native-5_0\\\\goals-frontend\\\\pages\\\\register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\n\nfunction Register() {\n  const {\n    0: goal,\n    1: setGoal\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n  const {\n    0: msg,\n    1: setMsg\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  function getValueInput(e) {\n    setGoal(_objectSpread(_objectSpread({}, goal), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  async function getSendForm(e) {\n    e.preventDefault();\n    setMsg;\n\n    try {\n      const result = await fetch('http://localhost:3333/goals', {\n        method: 'POST',\n        body: JSON.stringify(goal),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resultApi = await result.json();\n\n      if (resultApi.error) {\n        setMsg({\n          formSave: false,\n          type: 'error',\n          message: resultApi.message\n        });\n      } else {\n        setMsg({\n          formSave: false,\n          type: 'success',\n          message: resultApi.message\n        });\n      }\n    } catch (err) {\n      setMsg({\n        formSave: false,\n        type: 'error',\n        message: 'Erro ao salvar dados'\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register my goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), msg.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }, this) : \"\", msg.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 39\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getSendForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Insira seu nome\",\n        onChange: getValueInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Insira a descri\\xE7\\xE3o\",\n        onChange: getValueInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Insira o status\",\n        onChange: getValueInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Register;","map":{"version":3,"sources":["D:/Documentos/www/imersÃ£o-nodejs-react-and-eact-native-5_0/goals-frontend/pages/register.js"],"names":["React","useState","Register","goal","setGoal","name","description","status","msg","setMsg","formSave","type","message","getValueInput","e","target","value","getSendForm","preventDefault","result","fetch","method","body","JSON","stringify","headers","resultApi","json","error","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Register() {\r\n    const [goal, setGoal] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: ''\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    })\r\n\r\n    function getValueInput(e) {\r\n        setGoal({ ...goal, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    async function getSendForm(e) {\r\n        e.preventDefault()\r\n\r\n        setMsg\r\n\r\n        try {\r\n            const result = await fetch('http://localhost:3333/goals', {\r\n                method: 'POST',\r\n                body: JSON.stringify(goal),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const resultApi = await result.json()\r\n\r\n            if (resultApi.error) {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: resultApi.message\r\n                })\r\n            } else {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'success',\r\n                    message: resultApi.message\r\n                })\r\n            }\r\n        } catch (err) {\r\n            setMsg({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: 'Erro ao salvar dados'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Register my goals</h1>\r\n            <hr />\r\n\r\n            {msg.type === 'error' ? <p>{msg.message}</p> : \"\"}\r\n            {msg.type === 'success' ? <p>{msg.message}</p> : \"\"}\r\n\r\n            <form onSubmit={getSendForm}>\r\n                <label>Nome</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Insira seu nome\"\r\n                    onChange={getValueInput}\r\n                />\r\n                <br />\r\n\r\n                <label>DescriÃ§Ã£o</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    id=\"description\"\r\n                    placeholder=\"Insira a descriÃ§Ã£o\"\r\n                    onChange={getValueInput}\r\n                />\r\n                <br />\r\n\r\n                <label>Status</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"status\"\r\n                    id=\"status\"\r\n                    placeholder=\"Insira o status\"\r\n                    onChange={getValueInput}\r\n                />\r\n                <br />\r\n\r\n                <button type=\"submit\">Enviar</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}