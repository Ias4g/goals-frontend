{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\Documentos\\\\www\\\\imers\\xE3o-nodejs-react-and-eact-native-5_0\\\\goals-frontend\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nfunction Register() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      goal = _useState[0],\n      setGoal = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  function getValueInput(e) {\n    setGoal(_objectSpread(_objectSpread({}, goal), {}, _defineProperty({}, e.target.name, e.target.value)));\n  }\n\n  function getSendForm(_x) {\n    return _getSendForm.apply(this, arguments);\n  }\n\n  function _getSendForm() {\n    _getSendForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var result, resultApi;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setMsg({\n                formSave: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:3333/goals', {\n                method: 'POST',\n                body: JSON.stringify(goal),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              result = _context.sent;\n              _context.next = 8;\n              return result.json();\n\n            case 8:\n              resultApi = _context.sent;\n\n              if (resultApi.error) {\n                setMsg({\n                  formSave: false,\n                  type: 'error',\n                  message: resultApi.message\n                });\n              } else {\n                setMsg({\n                  formSave: false,\n                  type: 'success',\n                  message: resultApi.message\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              setMsg({\n                formSave: false,\n                type: 'error',\n                message: 'Erro ao salvar dados'\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n    return _getSendForm.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Register my goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), msg.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 45\n        }, this) : \"\", msg.type === 'success' ? /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"\",\n          color: \"success\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 47\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: getSendForm,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              \"for\": \"name\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Insira seu nome\",\n              onChange: getValueInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              \"for\": \"description\",\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"description\",\n              id: \"description\",\n              placeholder: \"Insira sua descri\\xE7\\xE3o\",\n              onChange: getValueInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              \"for\": \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"status\",\n              id: \"status\",\n              placeholder: \"Insira seu status\",\n              onChange: getValueInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), msg.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"danger\",\n            disabled: true,\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            outline: true,\n            color: \"primary\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"A5SSsJceLLKf3wuvk6SofX07OKY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Documentos/www/imersÃ£o-nodejs-react-and-eact-native-5_0/goals-frontend/pages/register.js"],"names":["React","useState","Jumbotron","Container","Button","Form","FormGroup","Label","Input","Alert","Register","name","description","status","goal","setGoal","formSave","type","message","msg","setMsg","getValueInput","e","target","value","getSendForm","preventDefault","fetch","method","body","JSON","stringify","headers","result","json","resultApi","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Jumbotron,\r\n    Container,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Alert\r\n} from 'reactstrap'\r\n\r\nfunction Register() {\r\n    const [goal, setGoal] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: ''\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    })\r\n\r\n    function getValueInput(e) {\r\n        setGoal({ ...goal, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    async function getSendForm(e) {\r\n        e.preventDefault()\r\n\r\n        setMsg({ formSave: true })\r\n\r\n        try {\r\n            const result = await fetch('http://localhost:3333/goals', {\r\n                method: 'POST',\r\n                body: JSON.stringify(goal),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const resultApi = await result.json()\r\n\r\n            if (resultApi.error) {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: resultApi.message\r\n                })\r\n            } else {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'success',\r\n                    message: resultApi.message\r\n                })\r\n            }\r\n        } catch (err) {\r\n            setMsg({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: 'Erro ao salvar dados'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron fluid className=\"form\">\r\n                <Container>\r\n                    <h1 className=\"display-4 text-center\">Register my goals</h1>\r\n                    <hr />\r\n\r\n                    {msg.type === 'error' ? <Alert color=\"danger\">{msg.message}</Alert> : \"\"}\r\n                    {msg.type === 'success' ? <Alert className=\"\" color=\"success\">{msg.message}</Alert> : \"\"}\r\n\r\n                    <Form onSubmit={getSendForm}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Nome</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                placeholder=\"Insira seu nome\"\r\n                                onChange={getValueInput}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"description\">DescriÃ§Ã£o</Label>\r\n                            <Input\r\n                                type=\"textarea\"\r\n                                name=\"description\"\r\n                                id=\"description\"\r\n                                placeholder=\"Insira sua descriÃ§Ã£o\"\r\n                                onChange={getValueInput}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"status\">Status</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"status\"\r\n                                id=\"status\"\r\n                                placeholder=\"Insira seu status\"\r\n                                onChange={getValueInput}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        {msg.formSave\r\n                            ? <Button type=\"submit\" color=\"danger\" disabled>Enviando...</Button>\r\n                            : <Button type=\"submit\" outline color=\"primary\">Enviar</Button>\r\n                        }\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}