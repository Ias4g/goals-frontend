{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Documentos\\\\www\\\\imers\\xE3o-nodejs-react-and-eact-native-5_0\\\\goals-frontend\\\\pages\\\\register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Menu from '../components/Menu';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nfunction Register() {\n  const {\n    0: goal,\n    1: setGoal\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n  const {\n    0: msg,\n    1: setMsg\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  function getValueInput(e) {\n    setGoal(_objectSpread(_objectSpread({}, goal), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  async function getSendForm(e) {\n    e.preventDefault();\n    setMsg({\n      formSave: true\n    });\n\n    try {\n      const result = await fetch('http://localhost:3333/goals', {\n        method: 'POST',\n        body: JSON.stringify(goal),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resultApi = await result.json();\n\n      if (resultApi.error) {\n        setMsg({\n          formSave: false,\n          type: 'error',\n          message: resultApi.message\n        });\n      } else {\n        setMsg({\n          formSave: false,\n          type: 'success',\n          message: resultApi.message\n        });\n      }\n    } catch (err) {\n      setMsg({\n        formSave: false,\n        type: 'error',\n        message: 'Erro ao salvar dados'\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Register my goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), msg.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"text-center\",\n          color: \"danger\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }, this) : \"\", msg.type === 'success' ? /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"text-center\",\n          color: \"success\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 47\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: getSendForm,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Insira seu nome\",\n              onChange: getValueInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"description\",\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"description\",\n              id: \"description\",\n              placeholder: \"Insira sua descri\\xE7\\xE3o\",\n              onChange: getValueInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"status\",\n              id: \"status\",\n              placeholder: \"Insira seu status\",\n              onChange: getValueInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), msg.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"danger\",\n            disabled: true,\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            outline: true,\n            color: \"primary\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Register;","map":{"version":3,"sources":["D:/Documentos/www/imersÃ£o-nodejs-react-and-eact-native-5_0/goals-frontend/pages/register.js"],"names":["React","useState","Menu","Jumbotron","Container","Button","Form","FormGroup","Label","Input","Alert","Register","goal","setGoal","name","description","status","msg","setMsg","formSave","type","message","getValueInput","e","target","value","getSendForm","preventDefault","result","fetch","method","body","JSON","stringify","headers","resultApi","json","error","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Menu from '../components/Menu'\r\n\r\nimport {\r\n    Jumbotron,\r\n    Container,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Alert\r\n} from 'reactstrap'\r\n\r\nfunction Register() {\r\n    const [goal, setGoal] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: ''\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    })\r\n\r\n    function getValueInput(e) {\r\n        setGoal({ ...goal, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    async function getSendForm(e) {\r\n        e.preventDefault()\r\n\r\n        setMsg({ formSave: true })\r\n\r\n        try {\r\n            const result = await fetch('http://localhost:3333/goals', {\r\n                method: 'POST',\r\n                body: JSON.stringify(goal),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const resultApi = await result.json()\r\n\r\n            if (resultApi.error) {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: resultApi.message\r\n                })\r\n            } else {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'success',\r\n                    message: resultApi.message\r\n                })\r\n            }\r\n        } catch (err) {\r\n            setMsg({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: 'Erro ao salvar dados'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu />\r\n            <Jumbotron fluid className=\"form\">\r\n                <Container>\r\n                    <h1 className=\"display-4 text-center\">Register my goals</h1>\r\n                    <hr />\r\n\r\n                    {msg.type === 'error' ? <Alert className=\"text-center\" color=\"danger\">{msg.message}</Alert> : \"\"}\r\n                    {msg.type === 'success' ? <Alert className=\"text-center\" color=\"success\">{msg.message}</Alert> : \"\"}\r\n\r\n                    <Form onSubmit={getSendForm}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Nome</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                placeholder=\"Insira seu nome\"\r\n                                onChange={getValueInput}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"description\">DescriÃ§Ã£o</Label>\r\n                            <Input\r\n                                type=\"textarea\"\r\n                                name=\"description\"\r\n                                id=\"description\"\r\n                                placeholder=\"Insira sua descriÃ§Ã£o\"\r\n                                onChange={getValueInput}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"status\">Status</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"status\"\r\n                                id=\"status\"\r\n                                placeholder=\"Insira seu status\"\r\n                                onChange={getValueInput}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        {msg.formSave\r\n                            ? <Button type=\"submit\" color=\"danger\" disabled>Enviando...</Button>\r\n                            : <Button type=\"submit\" outline color=\"primary\">Enviar</Button>\r\n                        }\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}