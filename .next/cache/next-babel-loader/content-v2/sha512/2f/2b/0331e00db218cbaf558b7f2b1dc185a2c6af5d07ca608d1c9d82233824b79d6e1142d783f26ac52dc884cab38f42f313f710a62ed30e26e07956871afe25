{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\Documentos\\\\www\\\\imers\\xE3o-nodejs-react-and-eact-native-5_0\\\\goals-frontend\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Jumbotron } from 'reactstrap';\n\nfunction Register() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      goal = _useState[0],\n      setGoal = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  function getValueInput(e) {\n    setGoal(_objectSpread(_objectSpread({}, goal), {}, _defineProperty({}, e.target.name, e.target.value)));\n  }\n\n  function getSendForm(_x) {\n    return _getSendForm.apply(this, arguments);\n  }\n\n  function _getSendForm() {\n    _getSendForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var result, resultApi;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setMsg({\n                formSave: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:3333/goals', {\n                method: 'POST',\n                body: JSON.stringify(goal),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              result = _context.sent;\n              _context.next = 8;\n              return result.json();\n\n            case 8:\n              resultApi = _context.sent;\n\n              if (resultApi.error) {\n                setMsg({\n                  formSave: false,\n                  type: 'error',\n                  message: resultApi.message\n                });\n              } else {\n                setMsg({\n                  formSave: false,\n                  type: 'success',\n                  message: resultApi.message\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              setMsg({\n                formSave: false,\n                type: 'error',\n                message: 'Erro ao salvar dados'\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n    return _getSendForm.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fl: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register my goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), msg.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }, this) : \"\", msg.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 43\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: getSendForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          placeholder: \"Insira seu nome\",\n          onChange: getValueInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          placeholder: \"Insira a descri\\xE7\\xE3o\",\n          onChange: getValueInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"status\",\n          id: \"status\",\n          placeholder: \"Insira o status\",\n          onChange: getValueInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), msg.formSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: true,\n          children: \"Enviando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"A5SSsJceLLKf3wuvk6SofX07OKY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Documentos/www/imersÃ£o-nodejs-react-and-eact-native-5_0/goals-frontend/pages/register.js"],"names":["React","useState","Jumbotron","Register","name","description","status","goal","setGoal","formSave","type","message","msg","setMsg","getValueInput","e","target","value","getSendForm","preventDefault","fetch","method","body","JSON","stringify","headers","result","json","resultApi","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Jumbotron } from 'reactstrap'\r\n\r\nfunction Register() {\r\n    const [goal, setGoal] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: ''\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    })\r\n\r\n    function getValueInput(e) {\r\n        setGoal({ ...goal, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    async function getSendForm(e) {\r\n        e.preventDefault()\r\n\r\n        setMsg({ formSave: true })\r\n\r\n        try {\r\n            const result = await fetch('http://localhost:3333/goals', {\r\n                method: 'POST',\r\n                body: JSON.stringify(goal),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const resultApi = await result.json()\r\n\r\n            if (resultApi.error) {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: resultApi.message\r\n                })\r\n            } else {\r\n                setMsg({\r\n                    formSave: false,\r\n                    type: 'success',\r\n                    message: resultApi.message\r\n                })\r\n            }\r\n        } catch (err) {\r\n            setMsg({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: 'Erro ao salvar dados'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron fl>\r\n                <h1>Register my goals</h1>\r\n                <hr />\r\n\r\n                {msg.type === 'error' ? <p>{msg.message}</p> : \"\"}\r\n                {msg.type === 'success' ? <p>{msg.message}</p> : \"\"}\r\n\r\n                <form onSubmit={getSendForm}>\r\n                    <label>Nome</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        placeholder=\"Insira seu nome\"\r\n                        onChange={getValueInput}\r\n                    />\r\n                    <br />\r\n\r\n                    <label>DescriÃ§Ã£o</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        placeholder=\"Insira a descriÃ§Ã£o\"\r\n                        onChange={getValueInput}\r\n                    />\r\n                    <br />\r\n\r\n                    <label>Status</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"status\"\r\n                        id=\"status\"\r\n                        placeholder=\"Insira o status\"\r\n                        onChange={getValueInput}\r\n                    />\r\n                    <br />\r\n\r\n                    {\r\n                        msg.formSave\r\n                            ? <button type=\"submit\" disabled>Enviando...</button>\r\n                            : <button type=\"submit\">Enviar</button>\r\n                    }\r\n                </form>\r\n            </Jumbotron>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}